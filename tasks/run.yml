---

###
### Set a sane name for the rendered file
###
- name: register a sane template name
  set_fact:
    cloudformation_file_name: "{{ cloudformation.template | basename }}-{{ cloudformation.stack_name }}.yml"
  check_mode: False
  when: not cloudformation_describe_only


###
### Maybe publish to parameter store, for great good
###
- name: publish vars to ssm
  aws_ssm_parameter_store:
    name: "{{ cloudformation.ssm_prefix }}/{{ my_item }}"
    value: "{{ lookup('vars', my_item) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
  with_items: "{{ cloudformation.ssm_vars }}"
  when: cloudformation.ssm_prefix is defined
        and cloudformation.ssm_vars is defined
        and not cloudformation_describe_only
  loop_control:
    loop_var: my_item

- name: publish secret vars to ssm
  aws_ssm_parameter_store:
    name: "{{ cloudformation.ssm_prefix }}/{{ my_item }}"
    string_type: "SecureString"
    key_id: "{{ cloudformation.ssm_kms_key_id }}"
    value: "{{ lookup('vars', my_item) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
  with_items: "{{ cloudformation.ssm_secret_vars }}"
  no_log: true
  when: cloudformation.ssm_prefix is defined
        and cloudformation.ssm_secret_vars is defined
        and cloudformation.ssm_kms_key_id is defined
        and not cloudformation_describe_only
  loop_control:
    loop_var: my_item

###
### Render cloudformation jinja2 template into the build directory
###
- name: ensure cloudformation template is rendered
  template:
    src: "{{ cloudformation.template }}"
    dest: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    mode: 0644
    force: True
  changed_when: False
  when: not cloudformation_describe_only
  check_mode: False


###
### Diff rendered cloudformation template (check mode only)
###
- name: diff cloudformation template parameters
  cloudformation_diff:
    ignore_hidden_params: True
    ignore_final_newline: False
    output_format: "{{ cloudformation_diff_output }}"
    output_choice: parameter
    stack_name: "{{ cloudformation.stack_name }}"
    template: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    template_tags: "{{ cloudformation.tags | default(omit) }}"
    template_parameters: "{{ cloudformation.template_parameters | default(omit) }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
  when: not cloudformation_generate_only
        and cloudformation_run_diff
        and not cloudformation_describe_only
  check_mode: False

- name: diff cloudformation template file
  cloudformation_diff:
    ignore_hidden_params: True
    ignore_final_newline: False
    output_format: "{{ cloudformation_diff_output }}"
    output_choice: template
    stack_name: "{{ cloudformation.stack_name }}"
    template: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    template_tags: "{{ cloudformation.tags | default(omit) }}"
    template_parameters: "{{ cloudformation.template_parameters | default(omit) }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
  when: not cloudformation_generate_only
        and cloudformation_run_diff
        and not cloudformation_describe_only
  check_mode: False

###
### Detect Drift
###
- name: detect drift ( pre )
  include_tasks: drift.yml
  when: pre_detect_drift|bool or cloudformation.pre_detect_drift|default(False)
        and not cloudformation_describe_only

###
### Run rendered cloudformation template
###
- name: ensure cloudformation stack is present
  cloudformation:
    stack_name: "{{ cloudformation.stack_name }}"
    state: "{{ cloudformation.state | default(omit) }}"
    template: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    create_changeset: "{{ cloudformation.create_changeset | default(create_changeset) }}"
    disable_rollback: "{{ cloudformation.disable_rollback | default(disable_rollback) }}"
    changeset_name: "{{ cloudformation.changeset_name | default(changeset_name) }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
    notification_arns: "{{ cloudformation.notification_arns | default(cloudformation_defaults.notification_arns | default(omit)) }}"
    template_parameters: "{{ cloudformation.template_parameters | default(omit) }}"
    tags: "{{ cloudformation.tags | default(omit) }}"
  when: not cloudformation_generate_only
        and not cloudformation_describe_only
  register: stack_output

###
### check changeset
###

- name: get changeset description
  command: >
    aws cloudformation describe-change-set
      --change-set-name "{{ cloudformation.changeset_name | default(changeset_name) }}"
      --stack-name "{{ cloudformation.stack_name }}"
      {{ ('--profile ' + cloudformation.profile) if cloudformation.profile is defined and cloudformation.profile|length !=0  else '' }}
  changed_when: False
  register: changeset_state
  failed_when: changeset_state.rc != 0
               and not (('ChangeSetNotFound' in changeset_state.stderr) or ('does not exist' in changeset_state.stderr))
  check_mode: False
  when: not cloudformation_generate_only

###
### Execute changeset, maybe wait
###
- name: execute changeset
  command: >
    aws cloudformation execute-change-set
      --change-set-name "{{ cloudformation.changeset_name | default(changeset_name) }}"
      --stack-name "{{ cloudformation.stack_name }}"
      {{ ('--profile ' + cloudformation.profile) if cloudformation.profile is defined and cloudformation.profile|length !=0  else '' }}
  register: chg_output
  when: not cloudformation_generate_only
        and ((cloudformation.execute_changeset is defined and cloudformation.execute_changeset|bool) or execute_changeset)
        and ((cloudformation.create_changeset is defined and cloudformation.create_changeset|bool) or create_changeset)
        and not (changeset_state.failed or (changeset_state.stdout| length == 0))
        and not cloudformation_describe_only



- name: ensure stack state after changeset
  command: >
    aws cloudformation wait
      "{{ cloudformation.state|default('stack-update-complete') }}"
      --stack-name "{{ cloudformation.stack_name }}"
      {{ ('--profile ' + cloudformation.profile) if cloudformation.profile is defined and cloudformation.profile|length !=0  else '' }}
  when: chg_output.changed

###
### Stack facts
###
- name: stack facts
  cloudformation_facts:
    stack_name: "{{ cloudformation.stack_name }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
    all_facts: true
  when: not cloudformation_generate_only
        and cloudformation.gather_stack_facts|default(False)
        and not cloudformation_describe_only
  register: stack_facts
  check_mode: False


###
### Publish stack facts to parameter store
###
- name: publish stack parameters to parameter store
  aws_ssm_parameter_store:
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
    name: "{{ cloudformation.ssm_prefix }}/{{ cloudformation.stack_name }}/stack_parameters/{{ my_item.key }}"
    value: "{{ my_item.value }}"
    state: "{{ sstate | default(omit) }}"
  with_dict: "{{ stack_facts['ansible_facts']['cloudformation'][cloudformation.stack_name]['stack_parameters'] }}"
  when: not cloudformation_generate_only
        and cloudformation.gather_stack_facts|default(False)
        and cloudformation.publish_stack_parameters|default(False)
        and cloudformation.ssm_prefix is defined
        and not cloudformation_describe_only
  loop_control:
    loop_var: my_item


- name: publish stack outputs to parameter store
  aws_ssm_parameter_store:
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
    name: "{{ cloudformation.ssm_prefix }}/{{ cloudformation.stack_name }}/stack_outputs/{{ my_item.key }}"
    value: "{{ my_item.value }}"
    state: "{{ sstate | default(omit) }}"
  with_dict: "{{ stack_facts['ansible_facts']['cloudformation'][cloudformation.stack_name]['stack_outputs'] }}"
  when: not cloudformation_generate_only
        and cloudformation.gather_stack_facts|default(False)
        and cloudformation.publish_stack_outputs|default(False)
        and cloudformation.ssm_prefix is defined
        and not cloudformation_describe_only
  loop_control:
    loop_var: my_item


- name: publish stack resources to parameter store
  aws_ssm_parameter_store:
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
    name: "{{ cloudformation.ssm_prefix }}/{{ cloudformation.stack_name }}/stack_resources/{{ my_item.key }}"
    value: "{{ my_item.value }}"
    state: "{{ sstate | default(omit) }}"
  with_dict: "{{ stack_facts['ansible_facts']['cloudformation'][cloudformation.stack_name]['stack_resources'] }}"
  when: not cloudformation_generate_only
        and cloudformation.gather_stack_facts|default(False)
        and cloudformation.publish_stack_resources|default(False)
        and cloudformation.ssm_prefix is defined
        and not cloudformation_describe_only
  loop_control:
    loop_var: my_item

###
### Detect Drift
###
- name: detect drift ( post )
  include_tasks: drift.yml
  when: detect_drift|bool or cloudformation.detect_drift|default(False)
        and not cloudformation_describe_only
